
#include "PDLS_EXT3_Basic_Fast.h"

#include "hV_HAL_Peripherals_fast.h"

#include "hV_Configuration_fast.h"

//DEFAULT BOARD: boardESP32DevKitC
Screen_EPD_EXT3_Fast myScreen(eScreen_EPD_EXT3_266_0C_Fast);
/*
  Pins:
    "BUSY", Red devkit jumper = 16
    "D/C", Orange devkit jumper = 18 
    "RST", Yellow devkit jumper = 17
    "MISO", Green devkit jumper = 12
    "MOSI", Blue devkit jumper = 13
    "SCK", Brown devkit jumper = 14
    "FCSM", Purple devkit jumper = 8
    "ECSM", Grey devkit jumper = 3
*/

//BREADBOARD: breadBoardBreakout
// Screen_EPD_EXT3_Fast myScreen(eScreen_EPD_EXT3_266_0C_Fast, breadBoardBreakout);
/*
  Pins:
    "BUSY", Red devkit jumper = 45
    "D/C", Orange devkit jumper = 48 
    "RST", Yellow devkit jumper = 47
    "MISO", Green devkit jumper = 37
    "MOSI", Blue devkit jumper = 36
    "SCK", Brown devkit jumper = 35
    "FCSM", Purple devkit jumper = 21
    "ECSM", Grey devkit jumper = 11
*/

//CUSTOM PINS
//for redefinition of pins if necessary
const pins_t customPins =
{
    .panelBusy = 47, //"BUSY", Red breadboard jumper
    .panelDC = 37, //"D/C", Orange breadboard jumper
    .panelReset = 36, //"RST", Yellow breadboard jumper
    .panelMISO = 37, //"MISO", Green breadboard jumper
    .panelMOSI = 36, //"MOSI", Blue breadboard jumper
    .panelSCK = 35, //"SCK", Brown breadboard jumper
    .flashCS = NOT_CONNECTED, //"FCSM", Purple breadboard jumper
    .panelCS = NOT_CONNECTED, //"ECSM", Grey breadboard jumper
};

uint8_t co2_bitmap[] = {
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xe0,0x3f,0xff,0xff,0xff,0xff,0xff, // 1
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf8,0x00,0x00,0xff,0xff,0xff,0xff,0xff, // 2
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xc0,0x00,0x00,0x1f,0xff,0xff,0xff,0xff, // 3
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0x00,0x00,0x00,0x07,0xff,0xff,0xff,0xff, // 4
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf8,0x00,0x00,0x00,0x01,0xff,0xff,0xff,0xff, // 5
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xe0,0x00,0x00,0x00,0x00,0x7f,0xff,0xff,0xff, // 6
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xc0,0x00,0x00,0x00,0x00,0x1f,0xff,0xff,0xff, // 7
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x80,0x00,0x00,0x00,0x00,0x0f,0xff,0xff,0xff, // 8
  0xff,0xff,0xff,0xff,0xff,0xfe,0x00,0x3f,0xfe,0x00,0x00,0x00,0x00,0x00,0x07,0xff,0xff,0xff, // 9
  0xff,0xff,0xff,0xff,0xff,0xe0,0x00,0x03,0xfc,0x00,0x00,0x00,0x00,0x00,0x03,0xff,0xff,0xff, // 10
  0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x78,0x00,0x00,0x00,0x00,0x00,0x01,0xff,0xff,0xff, // 11
  0xff,0xff,0xff,0xff,0xfc,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff, // 12
  0xff,0xff,0xff,0xff,0xf0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7f,0xff,0xff, // 13
  0xff,0xff,0xff,0xff,0xe0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3f,0xff,0xff, // 14
  0xff,0xff,0xff,0xff,0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3f,0xff,0xff, // 15
  0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1f,0xff,0xff, // 16
  0xff,0xff,0xff,0xfe,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0xff,0xff, // 17
  0xff,0xff,0xff,0xfc,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0xff,0xff, // 18
  0xff,0xff,0xff,0xfc,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xff,0xff, // 19
  0xff,0xff,0xff,0xf8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xff,0xff, // 20
  0xff,0xff,0xff,0xf0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xff,0xff, // 21
  0xff,0xff,0xff,0xf0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xff,0xff, // 22
  0xff,0xff,0xff,0xe0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xff,0xff, // 23
  0xff,0xff,0xff,0xe0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xff,0xff, // 24
  0xff,0xff,0xff,0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xff,0xff, // 25
  0xff,0xff,0xff,0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xff,0xff, // 26
  0xff,0xff,0xff,0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xff,0xff, // 27
  0xff,0xff,0xff,0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xff,0xff, // 28
  0xff,0xff,0xff,0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xff,0xff, // 29
  0xff,0xff,0xff,0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xff,0xff, // 30
  0xff,0xff,0xff,0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xff,0xff, // 31
  0xff,0xff,0xff,0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xff,0xff, // 32
  0xff,0xff,0xff,0xc0,0x00,0xff,0xf0,0x00,0x01,0xff,0xc0,0x00,0x0f,0xfe,0x00,0x03,0xff,0xff, // 33
  0xff,0xff,0xff,0xc0,0x03,0xff,0xfc,0x00,0x0f,0xff,0xf0,0x00,0x3f,0xff,0x80,0x07,0xff,0xff, // 34
  0xff,0xff,0xff,0xc0,0x07,0xff,0xfe,0x00,0x1f,0xff,0xfc,0x00,0x7f,0xff,0xc0,0x07,0xff,0xff, // 35
  0xff,0xff,0xfc,0x00,0x0f,0xff,0xff,0x00,0x3f,0xff,0xfe,0x00,0xff,0xff,0xe0,0x01,0xff,0xff, // 36
  0xff,0xff,0xf0,0x00,0x1f,0xff,0xff,0x80,0x7f,0xff,0xff,0x00,0xff,0xff,0xf0,0x00,0x3f,0xff, // 37
  0xff,0xff,0xc0,0x00,0x3f,0xe0,0x7f,0xc0,0xff,0x81,0xff,0x81,0xfe,0x0f,0xf0,0x00,0x0f,0xff, // 38
  0xff,0xff,0x00,0x00,0x7f,0xc0,0x3f,0xc0,0xff,0x00,0x7f,0x81,0xfc,0x07,0xf0,0x00,0x03,0xff, // 39
  0xff,0xfe,0x00,0x00,0x7f,0x80,0x3f,0xc1,0xfe,0x00,0x7f,0xc1,0xfc,0x07,0xf8,0x00,0x01,0xff, // 40
  0xff,0xf8,0x00,0x00,0x7f,0x80,0x1f,0xc1,0xfe,0x00,0x3f,0xc1,0xfc,0x07,0xf8,0x00,0x00,0x7f, // 41
  0xff,0xf0,0x00,0x00,0xff,0x00,0x1f,0xc1,0xfe,0x00,0x3f,0xc0,0x00,0x07,0xf0,0x00,0x00,0x3f, // 42
  0xff,0xe0,0x00,0x00,0xff,0x00,0x00,0x01,0xfc,0x00,0x3f,0xc0,0x00,0x0f,0xf0,0x00,0x00,0x3f, // 43
  0xff,0xe0,0x00,0x00,0xff,0x00,0x00,0x03,0xfc,0x00,0x3f,0xc0,0x00,0x1f,0xf0,0x00,0x00,0x1f, // 44
  0xff,0xc0,0x00,0x00,0xff,0x00,0x00,0x01,0xfc,0x00,0x3f,0xc0,0x00,0x1f,0xe0,0x00,0x00,0x0f, // 45
  0xff,0x80,0x00,0x00,0xff,0x00,0x00,0x03,0xfc,0x00,0x1f,0xc0,0x00,0x7f,0xc0,0x00,0x00,0x07, // 46
  0xff,0x80,0x00,0x00,0xff,0x00,0x00,0x03,0xfc,0x00,0x1f,0xc0,0x00,0xff,0x80,0x00,0x00,0x07, // 47
  0xff,0x00,0x00,0x00,0xff,0x00,0x00,0x01,0xfc,0x00,0x3f,0xc0,0x01,0xff,0x00,0x00,0x00,0x03, // 48
  0xff,0x00,0x00,0x00,0xff,0x00,0x00,0x01,0xfc,0x00,0x3f,0xc0,0x03,0xfe,0x00,0x00,0x00,0x03, // 49
  0xfe,0x00,0x00,0x00,0xff,0x00,0x1f,0xc1,0xfe,0x00,0x3f,0xc0,0x07,0xfc,0x00,0x00,0x00,0x03, // 50
  0xfe,0x00,0x00,0x00,0x7f,0x80,0x1f,0xc1,0xfe,0x00,0x3f,0xc0,0x0f,0xf8,0x00,0x00,0x00,0x01, // 51
  0xfe,0x00,0x00,0x00,0x7f,0x80,0x1f,0xc1,0xfe,0x00,0x3f,0xc0,0x1f,0xf0,0x00,0x00,0x00,0x01, // 52
  0xfe,0x00,0x00,0x00,0x7f,0xc0,0x3f,0xc0,0xff,0x00,0x7f,0x80,0x3f,0xe0,0x00,0x00,0x00,0x01, // 53
  0xfe,0x00,0x00,0x00,0x3f,0xe0,0x7f,0xc0,0xff,0x80,0xff,0x80,0x7f,0xc0,0x00,0x00,0x00,0x01, // 54
  0xfe,0x00,0x00,0x00,0x1f,0xff,0xff,0x80,0x7f,0xff,0xff,0x01,0xff,0xff,0xfc,0x00,0x00,0x01, // 55
  0xfe,0x00,0x00,0x00,0x1f,0xff,0xff,0x00,0x3f,0xff,0xfe,0x01,0xff,0xff,0xfc,0x00,0x00,0x01, // 56
  0xfe,0x00,0x00,0x00,0x0f,0xff,0xfe,0x00,0x1f,0xff,0xfc,0x01,0xff,0xff,0xfc,0x00,0x00,0x01, // 57
  0xfe,0x00,0x00,0x00,0x03,0xff,0xfc,0x00,0x0f,0xff,0xf0,0x01,0xff,0xff,0xfc,0x00,0x00,0x01, // 58
  0xfe,0x00,0x00,0x00,0x00,0xff,0xf0,0x00,0x03,0xff,0xc0,0x01,0xff,0xff,0xfc,0x00,0x00,0x01, // 59
  0xfe,0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03, // 60
  0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03, // 61
  0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03, // 62
  0xff,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07, // 63
  0xff,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f, // 64
  0xff,0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f, // 65
  0xff,0xe0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1f, // 66
  0xff,0xf0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3f, // 67
  0xff,0xf0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7f, // 68
  0xff,0xf8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff, // 69
  0xff,0xfe,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xff, // 70
  0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xff, // 71
  0xff,0xff,0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0f,0xff, // 72
  0xff,0xff,0xf0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3f,0xff, // 73
  0xff,0xff,0xfe,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xff,0xff, // 74
  0xff,0xff,0xff,0xf0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3f,0xff,0xff, // 75
};

bool order;

void setup()
{
    Serial.begin(115200);
    myScreen.begin();
    // myScreen.regenerate(); //globally clear screen
    myScreen.globalRefresh(10);
    myScreen.setOrientation(3);
    myScreen.partialScreenBitmap(0, 0, co2_bitmap, 75, 144);
    myScreen.flush();
}

void loop()
{
  delay(1000);
}
